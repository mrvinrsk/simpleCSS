$main: (
        "main-lightest": #bf7bff,
        "main-lighter": #b059ff,
        "main-light": #9d29ff,
        "main": #8c02fc,
        "main-dark": #7000c9,
        "main-darker": #5e00a6,
        "main-darkest": #4b0083
);

$gray: (
        "white": #FFF,
        "white-darker": #EEE,
        "gray-lightest": #d5d5d5,
        "gray-lighter": #b5b5b5,
        "gray-light": #909090,
        "gray": #323232,
        "gray-dark": #202020,
        "gray-darker": #151515,
        "gray-darkest": #101010,
        "black": #000
);

$success: (
        "success-lightest": #00de5b,
        "success-lighter": #00bb4b,
        "success-light": #00a241,
        "success": #008736,
        "success-dark": #00732d,
        "success-darker": #005e24,
        "success-darkest": #004f1e
);

$error: (
        "warning-lightest": #ffc956,
        "warning-lighter": #ffc339,
        "warning-light": #ffbb1a,
        "warning": #ffb700,
        "warning-dark": #d29900,
        "warning-darker": #ab7c00,
        "warning-darkest": #8f6a00,

        "error-lightest": #ff4e4e,
        "error-lighter": #ec3030,
        "error-light": #d91515,
        "error": #c20d0d,
        "error-dark": #ab0808,
        "error-darker": #8f0404,
        "error-darkest": #770404
);

$info: (
        "info-lightest": #ff4fb4,
        "info-lighter": #f835aa,
        "info-light": #e8239b,
        "info": #ce0f86,
        "info-dark": #b60677,
        "info-darker": #980264,
        "info-darkest": #77004e
);


$theme: (
        $main,
        $gray,
        $success,
        $error,
        $info
);


/* Color */
@mixin eachColor() {
  @each $colorTheme in $theme {
    @each $name, $color in $colorTheme {
      @content($name, $color);
    }
  }
}


@include eachColor() using($name, $value) {
  .bg-#{$name} {
    background-color: $value;
  }
}


@function lighter($name, $color: false, $steps: 1) {
  $list: null;

  @each $colorTheme in $theme {
    @each $colName, $color in $colorTheme {
      @if ($colName == $name) {
        $list: $colorTheme;
      }
    }
  }

  $keys: map-keys($list);
  $n: index($keys, $name);

  @if not $n {
    @error "Color '#{$name}' not found in '#{$list}'";
  }

  $ret: if($n > $steps, nth($keys, ($n - $steps)), null);

  @if not $color {
    @return $ret;
  } @else {
    @return map-get($list, $ret);
  }
}

@function darker($name, $color: false, $steps: 1) {
  $list: null;

  @each $colorTheme in $theme {
    @each $colName, $color in $colorTheme {
      @if ($colName == $name) {
        $list: $colorTheme;
      }
    }
  }

  $keys: map-keys($list);
  $n: index($keys, $name);

  @if not $n {
    @error "Color '#{$name}' not found in '#{$list}'";
  }

  $ret: if($n < length($keys), nth($keys, ($n + $steps)), null);

  @if not $color {
    @return $ret;
  } @else {
    @return map-get($list, $ret);
  }
}